name: Deploy Astro Project

on:
  push:
    branches:
      - master
      - dev

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: './dodo-kids'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install
        working-directory: ./dodo-kids

      - name: Build project
        run: yarn build
        working-directory: ./dodo-kids
        id: build

      - name: Set target branch
        id: set-target-branch
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            echo "TARGET_BRANCH=master" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "TARGET_BRANCH=som-summarize" >> $GITHUB_ENV
          fi
          
          echo "target-branch=$TARGET_BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          path: ./site-frontend
          repository: Sinoptik93/site-frontend
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ steps.set-target-branch.outputs.target-branch }}

      - name: Create branch
        id: create-branch
        working-directory: ./site-frontend
        run: |
          echo "BRANCH=dodo-kids-$(echo ${{ GITHUB_SHA }} | cut -c1-7)" >> $GITHUB_OUTPUT
          git checkout -b "$BRANCH"
          
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Copy build to target repository
        run: |
          cp -r ./dodo-kids/dist/* ./site-frontend/public

#      - name: Setup GPG
#        run: |
#          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
#          echo "${{ secrets.GPG_KEYGRIP }}" | gpg --batch --import-ownertrust
#          git config --global user.signingkey ${{ secrets.GPG_KEY_ID }}
#          git config --global commit.gpgSign true
#        env:
#          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
#          GPG_KEYGRIP: ${{ secrets.GPG_KEYGRIP }}

      - name: Configure Git for GPG signing
#        run: |
#          git config --global user.name '${{ github.event.<author_commit> }}'
#          git config --global user.email '${{ github.event.<author_email> }}'
        run: |
          git config --global user.name 'Sergey Chepukhin'
          git config --global user.email 'chepukhin.sergey@gmail.com'

      - name: Commit and push changes
        working-directory: ./site-frontend
        run: |
          git add .
          git commit -S -m "${{ github.event.head_commit.message }}"
          git push -u origin ${{ steps.create-branch.outputs.branch }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.create-branch.outputs.branch }}
          base: ${{ steps.set-target-branch.outputs.target-branch }}
          title: ${{ github.event.head_commit.message }}

#      - name: Add comment to pull request
#        uses: actions/github-script@v7
#        id: comment-script
#        with:
#          script: |
#            const script = require('./githubPRCommentScript.js')
#            await script({github, context, core})
